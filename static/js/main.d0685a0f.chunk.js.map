{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAkBeA,EAhBF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEtB,OACI,sBAAKC,UAAU,mDAAf,UACA,qBAAKC,IAAI,UAASC,IAAG,+BAA0BH,EAA1B,cAErB,gCACA,6BAAKF,IACL,4BAAIC,WCcGK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACrB,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCINC,EAfG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKV,UAAU,MAAf,SAEA,uBACIA,UAAU,mCACdW,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCAJI,EARA,SAACC,GACZ,OACA,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAQ,SAAjE,SACKJ,EAAMK,YCkDAC,G,wDA9CX,aAAc,IAAD,8BACT,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAjB1C,EAAKC,MAAS,CACbvB,OAAQ,GACRK,YAAa,IAJJ,E,qDAUb,WAAoB,IAAD,OACfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAU3C,WACI,MAA6BC,KAAKN,MAA3BvB,EAAP,EAAOA,OAAOK,EAAd,EAAcA,YACRyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAE1D,OAAQjC,EAAOmC,OAGV,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UAEJ,cAAC,EAAD,CAAUlB,OAAS8B,SAPtB,6C,GA9BSM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAQ,cAAC,EAAD,IAEfC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d0685a0f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    \r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='_robot_'src={`https://robohash.org/${id}?200x200`} />\r\n\r\n        <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>    \r\n\r\n        </div >\r\n\r\n    );\r\n        }\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    // if (true) {\r\n    //     throw new Error('NOOOOOOOOOOO!');\r\n    // }\r\n    return (\r\n        <div>{\r\n            \r\n            robots.map((user,i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n            );\r\n    })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            \r\n        <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n         placeholder='search robots'\r\n         onChange={searchChange}\r\n         />\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n    <div style={{overflowY:'scroll',border:'5px solid black',height: '500px'}}>\r\n        {props.children}\r\n    </div> \r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n//import ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n       this.state =  {\r\n        robots: [],\r\n        searchfield: ''\r\n       }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())        \r\n        .then(users => this.setState({ robots: users} ));\r\n        \r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n        \r\n    }\r\n    render(){\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n       return !robots.length ? \r\n         <h1>Loading</h1> :\r\n         (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>                  \r\n                      \r\n            <CardList robots= {filteredRobots} />\r\n            \r\n            </Scroll>\r\n            </div>\r\n\r\n        \r\n    );\r\n    \r\n}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render( <App/>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}